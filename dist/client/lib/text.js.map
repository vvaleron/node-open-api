{"version":3,"sources":["../../../src/client/lib/text.js"],"names":["define","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","useDefault","value","defaultValue","isSamePort","protocol1","port1","protocol2","port2","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","e","parseName","name","modName","ext","temp","index","lastIndexOf","isRelative","indexOf","substring","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","node","require","nodeRequire","callback","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","evt","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","length","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path"],"mappings":"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","file":"text.js","sourcesContent":["/**\n * @license text 2.0.15 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/text/LICENSE\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine(['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    function useDefault(value, defaultValue) {\n        return value === undefined || value === '' ? defaultValue : value;\n    }\n\n    //Allow for default ports for http and https.\n    function isSamePort(protocol1, port1, protocol2, port2) {\n        if (port1 === port2) {\n            return true;\n        } else if (protocol1 === protocol2) {\n            if (protocol1 === 'http') {\n                return useDefault(port1, '80') === useDefault(port2, '80');\n            } else if (protocol1 === 'https') {\n                return useDefault(port1, '443') === useDefault(port2, '443');\n            }\n        }\n        return false;\n    }\n\n    text = {\n        version: '2.0.15',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || isSamePort(uProtocol, uPort, protocol, port));\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n"]}