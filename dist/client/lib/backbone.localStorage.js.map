{"version":3,"sources":["../../../src/client/lib/backbone.localStorage.js"],"names":["root","factory","exports","require","module","define","amd","Backbone","S4","Math","random","toString","substring","guid","isObject","item","Object","contains","array","i","length","extend","obj","props","key","result","object","property","value","LocalStorage","window","Store","name","serializer","localStorage","serialize","JSON","stringify","deserialize","data","parse","store","getItem","records","split","prototype","save","setItem","join","create","model","id","set","idAttribute","_itemName","push","find","update","modelId","findAll","destroy","removeItem","splice","_clear","local","itemRe","RegExp","k","test","_storageSize","sync","localSync","method","options","collection","resp","errorMessage","syncDfd","$","Deferred","undefined","error","code","message","success","VERSION","resolve","reject","complete","promise","ajaxSync","getSyncMethod","forceAjaxSync","apply"],"mappings":"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","file":"backbone.localStorage.js","sourcesContent":["/**\n * Backbone localStorage Adapter\n * Version 1.1.16\n *\n * https://github.com/jeromegn/Backbone.localStorage\n */\n(function (root, factory) {\n  if (typeof exports === 'object' && typeof require === 'function') {\n    module.exports = factory(require(\"backbone\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"backbone\"], function(Backbone) {\n      // Use global variables if the locals are undefined.\n      return factory(Backbone || root.Backbone);\n    });\n  } else {\n    factory(Backbone);\n  }\n}(this, function(Backbone) {\n// A simple module to replace `Backbone.sync` with *localStorage*-based\n// persistence. Models are given GUIDS, and saved into a JSON object. Simple\n// as that.\n\n// Generate four random hex digits.\nfunction S4() {\n   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n};\n\n// Generate a pseudo-GUID by concatenating random hexadecimal.\nfunction guid() {\n   return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n};\n\nfunction isObject(item) {\n  return item === Object(item);\n}\n\nfunction contains(array, item) {\n  var i = array.length;\n  while (i--) if (array[i] === item) return true;\n  return false;\n}\n\nfunction extend(obj, props) {\n  for (var key in props) obj[key] = props[key]\n  return obj;\n}\n\nfunction result(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return (typeof value === 'function') ? object[property]() : value;\n}\n\n// Our Store is represented by a single JS object in *localStorage*. Create it\n// with a meaningful name, like the name you'd give a table.\n// window.Store is deprectated, use Backbone.LocalStorage instead\nBackbone.LocalStorage = window.Store = function(name, serializer) {\n  if( !this.localStorage ) {\n    throw \"Backbone.localStorage: Environment does not support localStorage.\"\n  }\n  this.name = name;\n  this.serializer = serializer || {\n    serialize: function(item) {\n      return isObject(item) ? JSON.stringify(item) : item;\n    },\n    // fix for \"illegal access\" error on Android when JSON.parse is passed null\n    deserialize: function (data) {\n      return data && JSON.parse(data);\n    }\n  };\n  var store = this.localStorage().getItem(this.name);\n  this.records = (store && store.split(\",\")) || [];\n};\n\nextend(Backbone.LocalStorage.prototype, {\n\n  // Save the current state of the **Store** to *localStorage*.\n  save: function() {\n    this.localStorage().setItem(this.name, this.records.join(\",\"));\n  },\n\n  // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\n  // have an id of it's own.\n  create: function(model) {\n    if (!model.id && model.id !== 0) {\n      model.id = guid();\n      model.set(model.idAttribute, model.id);\n    }\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    this.records.push(model.id.toString());\n    this.save();\n    return this.find(model);\n  },\n\n  // Update a model by replacing its copy in `this.data`.\n  update: function(model) {\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    var modelId = model.id.toString();\n    if (!contains(this.records, modelId)) {\n      this.records.push(modelId);\n      this.save();\n    }\n    return this.find(model);\n  },\n\n  // Retrieve a model from `this.data` by id.\n  find: function(model) {\n    return this.serializer.deserialize(this.localStorage().getItem(this._itemName(model.id)));\n  },\n\n  // Return the array of all models currently in storage.\n  findAll: function() {\n    var result = [];\n    for (var i = 0, id, data; i < this.records.length; i++) {\n      id = this.records[i];\n      data = this.serializer.deserialize(this.localStorage().getItem(this._itemName(id)));\n      if (data != null) result.push(data);\n    }\n    return result;\n  },\n\n  // Delete a model from `this.data`, returning it.\n  destroy: function(model) {\n    this.localStorage().removeItem(this._itemName(model.id));\n    var modelId = model.id.toString();\n    for (var i = 0, id; i < this.records.length; i++) {\n      if (this.records[i] === modelId) {\n        this.records.splice(i, 1);\n      }\n    }\n    this.save();\n    return model;\n  },\n\n  localStorage: function() {\n    return localStorage;\n  },\n\n  // Clear localStorage for specific collection.\n  _clear: function() {\n    var local = this.localStorage(),\n      itemRe = new RegExp(\"^\" + this.name + \"-\");\n\n    // Remove id-tracking item (e.g., \"foo\").\n    local.removeItem(this.name);\n\n    // Match all data items (e.g., \"foo-ID\") and remove.\n    for (var k in local) {\n      if (itemRe.test(k)) {\n        local.removeItem(k);\n      }\n    }\n\n    this.records.length = 0;\n  },\n\n  // Size of localStorage.\n  _storageSize: function() {\n    return this.localStorage().length;\n  },\n\n  _itemName: function(id) {\n    return this.name+\"-\"+id;\n  }\n\n});\n\n// localSync delegate to the model or collection's\n// *localStorage* property, which should be an instance of `Store`.\n// window.Store.sync and Backbone.localSync is deprecated, use Backbone.LocalStorage.sync instead\nBackbone.LocalStorage.sync = window.Store.sync = Backbone.localSync = function(method, model, options) {\n  var store = result(model, 'localStorage') || result(model.collection, 'localStorage');\n\n  var resp, errorMessage;\n  //If $ is having Deferred - use it.\n  var syncDfd = Backbone.$ ?\n    (Backbone.$.Deferred && Backbone.$.Deferred()) :\n    (Backbone.Deferred && Backbone.Deferred());\n\n  try {\n\n    switch (method) {\n      case \"read\":\n        resp = model.id != undefined ? store.find(model) : store.findAll();\n        break;\n      case \"create\":\n        resp = store.create(model);\n        break;\n      case \"update\":\n        resp = store.update(model);\n        break;\n      case \"delete\":\n        resp = store.destroy(model);\n        break;\n    }\n\n  } catch(error) {\n    if (error.code === 22 && store._storageSize() === 0)\n      errorMessage = \"Private browsing is unsupported\";\n    else\n      errorMessage = error.message;\n  }\n\n  if (resp) {\n    if (options && options.success) {\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.success(model, resp, options);\n      } else {\n        options.success(resp);\n      }\n    }\n    if (syncDfd) {\n      syncDfd.resolve(resp);\n    }\n\n  } else {\n    errorMessage = errorMessage ? errorMessage\n                                : \"Record Not Found\";\n\n    if (options && options.error)\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.error(model, errorMessage, options);\n      } else {\n        options.error(errorMessage);\n      }\n\n    if (syncDfd)\n      syncDfd.reject(errorMessage);\n  }\n\n  // add compatibility with $.ajax\n  // always execute callback for success and error\n  if (options && options.complete) options.complete(resp);\n\n  return syncDfd && syncDfd.promise();\n};\n\nBackbone.ajaxSync = Backbone.sync;\n\nBackbone.getSyncMethod = function(model, options) {\n  var forceAjaxSync = options && options.ajaxSync;\n\n  if(!forceAjaxSync && (result(model, 'localStorage') || result(model.collection, 'localStorage'))) {\n    return Backbone.localSync;\n  }\n\n  return Backbone.ajaxSync;\n};\n\n// Override 'Backbone.sync' to default to localSync,\n// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\nBackbone.sync = function(method, model, options) {\n  return Backbone.getSyncMethod(model, options).apply(this, [method, model, options]);\n};\n\nreturn Backbone.LocalStorage;\n}));\n"]}