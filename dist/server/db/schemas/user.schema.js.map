{"version":3,"sources":["../../../../src/server/db/schemas/user.schema.js"],"names":["UserSchema","name","String","username","type","required","unique","password","admin","Boolean","location","meta","age","Number","website","created_at","Date","updated_at","Object","assign","methods","say","prop"],"mappings":";;;;;;;;AACA;;;;;;+eADA;;;IAGMA,U;;;AACF,0BAAe;AAAA;;AAAA,4HACL;AACFC,kBAAMC,MADJ;AAEFC,sBAAU,EAACC,MAAMF,MAAP,EAAeG,UAAU,IAAzB,EAA+BC,QAAQ,IAAvC,EAFR;AAGFC,sBAAU,EAACH,MAAMF,MAAP,EAAeG,UAAU,IAAzB,EAHR;AAIFG,mBAAOC,OAJL;AAKFC,sBAAUR,MALR;AAMFS,kBAAM;AACFC,qBAAKC,MADH;AAEFC,yBAASZ;AAFP,aANJ;AAUFa,wBAAYC,IAVV;AAWFC,wBAAYD;AAXV,SADK;;AAeXE,eAAOC,MAAP,CAAc,MAAKC,OAAnB,EAA4B;AACxBC,iBAAK,MAAKA;AADc,SAA5B;AAfW;AAkBd;;;;4BAEIC,I,EAAM;AACP,mBAAO,KAAKA,IAAL,CAAP;AACH;;;;;;kBAGUtB,U","file":"user.schema.js","sourcesContent":["// grab the things we need\nimport { Schema } from 'mongoose';\n\nclass UserSchema extends Schema {\n    constructor () {\n        super({\n            name: String,\n            username: {type: String, required: true, unique: true},\n            password: {type: String, required: true},\n            admin: Boolean,\n            location: String,\n            meta: {\n                age: Number,\n                website: String\n            },\n            created_at: Date,\n            updated_at: Date\n        });\n\n        Object.assign(this.methods, {\n            say: this.say\n        });\n    }\n\n    say (prop) {\n        return this[prop];\n    }\n}\n\nexport default UserSchema;"]}